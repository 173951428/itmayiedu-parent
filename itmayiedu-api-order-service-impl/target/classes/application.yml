###服务启动端口号
server:
  port: 8082
###服务名称(服务注册到eureka名称)
spring:
  application:
    name: itmayiedu-api-order-service-impl
  datasource:
    url: jdbc:mysql://localhost:3306/itmayiedu-order?useUnicode=true&characterEncoding=utf8
    username: root
    password: root
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
    virtual-host: /admin_host

###服务注册到eureka地址
eureka:
  client:
    service-url:
      # 写上2个集群服务地址，中间用逗号隔开就行
      defaultZone: http://127.0.0.1:8100/eureka
    ###当前会员服务注册到eureka
    register-with-eureka: true
    ###是否需要从eureka上获取注册信息
    fetch-registry: true


    # 心跳检测检测与续约时间
    # 测试时将值设置设置小些，保证服务关闭后注册中心能及时踢出服务
    instance:
      ###Eureka客户端向服务端发送心跳的时间间隔，单位为秒（客户端告诉服务端自己会按照该规则）
      lease-renewal-interval-in-seconds: 1
      ####Eureka服务端在收到最后一次心跳之后等待的时间上限，单位为秒，超过则剔除（客户端告诉服务端按照此规则等待自己）
      lease-expiration-duration-in-seconds: 2

###设置feign客户端超时时间,防止调用服务端与被调用服务端因为网络问题，调用失败
### springCloud feign客户端默认开启ribbon，所以feign客户端超时时间只要设置ribbon 就可以了
ribbon:
  ###指的是建立连接所用的时间，适用于网络状况正常的情况下，两端连接所用的时间。
  ReadTimeout: 3000
  ###指的是建立连接后从服务器读取到可用资源所用的时间。
  ConnectTimeout: 3000

#开启Hystrix断路器
feign:
  hystrix:
    enabled: true


hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 9000


# swagger 扫描包范围
swagger:
  base-package: com.itmayiedu.api.order.service.impl


mybatis-plus:
  configuration:
    cache-enabled: false
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true
  global-config:
    db-column-underline: true
    field-strategy: 1
    id-type: 0
    logic-delete-value: 1
    logic-not-delete-value: 0
  mapper-locations: classpath:mapper/*Mapper.xml
  typeAliasesPackage: com.itmayiedu.api.entity



tx-lcn:
  client:
    ##LCN 客户端连接tx-manager 全局事务注册中心
    manager-address: 127.0.0.1:8070
  ribbon:
    loadbalancer:
      dtx:
        enabled: true